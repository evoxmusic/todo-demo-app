name: PR Run E2E Tests

on:
  pull_request:
    types: [ labeled, closed ]

jobs:
  create-e2e-environment:
    if: ${{ github.event.label.name == 'e2e' }}
    runs-on: ubuntu-latest
    permissions:
        pull-requests: write
    steps:
      - id: create-environment
        name: Create and deploy Qovery environment
        env:
          QOVERY_CLI_ACCESS_TOKEN: ${{ secrets.QOVERY_CLI_ACCESS_TOKEN }}
        run: |
          # Download and install Qovery CLI
          curl -s https://get.qovery.com | bash

          echo "Organization name: ${{ vars.QOVERY_ORGANIZATION_NAME }}"
          echo "Project name: ${{ vars.QOVERY_PROJECT_NAME }}"
          echo "Blueprint name: ${{ vars.QOVERY_BLUEPRINT_ENVIRONMENT_NAME }}"
          
          new_environment_name="${GITHUB_HEAD_REF}"

          echo "Let's clone '${{ vars.QOVERY_BLUEPRINT_ENVIRONMENT_NAME }}' environment into '$new_environment_name' environment"

          qovery environment clone \
            --organization "${{ vars.QOVERY_ORGANIZATION_NAME }}" \
            --project "${{ vars.QOVERY_PROJECT_NAME }}" \
            --environment "${{ vars.QOVERY_BLUEPRINT_ENVIRONMENT_NAME }}" \
            --new-environment-name "$new_environment_name"

          qovery container update \
            --organization "${{ vars.QOVERY_ORGANIZATION_NAME }}" \
            --project "${{ vars.QOVERY_PROJECT_NAME }}" \
            --environment "${{ vars.QOVERY_BLUEPRINT_ENVIRONMENT_NAME }}" \
            --container "${{ vars.QOVERY_APPLICATION_NAME }}" \
            --tag ${{ github.sha }}

          qovery environment deploy \
            --organization "${{ vars.QOVERY_ORGANIZATION_NAME }}" \
            --project "${{ vars.QOVERY_PROJECT_NAME }}" \
            --environment "$new_environment_name" \
            -w

          qovery_status_markdown_output=`qovery service list \
            --organization "${{ vars.QOVERY_ORGANIZATION_NAME }}" \
            --project "${{ vars.QOVERY_PROJECT_NAME }}" \
            --environment "$new_environment_name" \
            --markdown`

          echo "qovery_status_markdown_output=$qovery_status_markdown_output" >> $GITHUB_OUTPUT

      - name: PR Comment with URL
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            echo "${{ steps.create-environment.outputs.qovery_status_markdown_output }}"

  run-e2e-tests:
    if: ${{ github.event.label.name == 'e2e' }}
    runs-on: ubuntu-latest
    needs: create-e2e-environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  delete-e2e-environment:
    if: ${{ github.event.label.name == 'e2e' }}
    runs-on: ubuntu-latest
    needs: run-e2e-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3